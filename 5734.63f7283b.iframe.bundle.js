/*! For license information please see 5734.63f7283b.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_haaretz_a_tm_sg=self.webpackChunk_haaretz_a_tm_sg||[]).push([[5734],{"../../ds-atoms/s-button/src/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ZP:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("../../ds-atoms/s-button/src/Button.tsx").ZP;try{_Button.displayName="_Button",_Button.__docgenInfo={description:"",displayName:"_Button",props:{children:{defaultValue:{value:"null"},description:"The Children to be rendered inside `<Button>`",name:"children",required:!1,type:{name:"ReactNode"}},inlineStyle:{defaultValue:null,description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyButton(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <Button\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<Button styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}},priority:{defaultValue:{value:"primary"},description:"Signals the button's priority within the general UI composition\nin which it is used and in relation to other buttons related to it.<br />\n`primary` is an opaque button with a solid background, `secondary` is an\noutlined button with a solid stroke, and `tertiary` is a textual-only button.\n@defaultValue 'primary'",name:"priority",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},variant:{defaultValue:{value:"brand"},description:"Sets the color of the button and indicates intent\n@defaultValue 'brand'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"brand"'},{value:'"neutral"'},{value:'"danger"'},{value:'"success"'},{value:'"sales"'}]}},size:{defaultValue:{value:"regular"},description:"Sets the button's typography and inner-spacing (padding).\n@defaultValue 'regular'",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"small"'},{value:'"large"'},{value:'"regular"'}]}},stretch:{defaultValue:{value:"false"},description:"Expand to fill the full width the Button's parent container\n@defaultValue false",name:"stretch",required:!1,type:{name:"boolean | undefined"}},sharp:{defaultValue:null,description:"Sets sharp corners (without border-radius) on two or more corners\n@defaultValue undefined",name:"sharp",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"end"'}]}},startIcon:{defaultValue:{value:"null"},description:"An icon component to place at the beginning of the input.",name:"startIcon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | IconName | null | undefined"}},endIcon:{defaultValue:{value:"null"},description:"An icon component to place at the end of the input.",name:"endIcon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | IconName | null | undefined"}},type:{defaultValue:{value:"button"},description:"The value of  button's type attribute. Ignored when `as` is not `button.`",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},isPressed:{defaultValue:null,description:"Indicates an on-off dual state, (similar to a toggle button)\ne.g., a `follow author`, the state of which needs to be conveyed\nto screen readers using the `aria-pressed` attribute\n@defaultValue undefined",name:"isPressed",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:{value:"auto"},description:"",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"auto"'},{value:'"busy"'}]}},busyNotice:{defaultValue:null,description:'The notification read by screen readers to notify the user\n that something is happening, e.g., "Loading more articles".\n **Required when `state` is set to `busy`.**',name:"busyNotice",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-button/src/index.tsx#_Button"]={docgenInfo:_Button.__docgenInfo,name:"_Button",path:"../../ds-atoms/s-button/src/index.tsx#_Button"})}catch(__react_docgen_typescript_loader_error){}},"../../ds-atoms/s-formfield-description/src/FormfieldDescription.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>src_FormfieldDescription});var esm_extends=__webpack_require__("../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/extends.js"),objectWithoutProperties=__webpack_require__("../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("../../../node_modules/.pnpm/react@18.0.0-rc.3-next-e7d0053e6-20220325/node_modules/react/index.js"),style9=__webpack_require__("../../../node_modules/.pnpm/style9@0.14.0_rollup@2.79.1/node_modules/style9/index.mjs");const _excluded=["children","id","inlineStyle","isInvalid","styleExtend","variant"];var __jsx=react.createElement;const c={base:{color:"koPyoH",marginTop:"iqhvfj",fontSize:"gVscJz",lineHeight:"kvNqZl","@media all and (min-width:102em)":{fontSize:"hyhpVP",lineHeight:"kRmCJO"}},isInvalid:{"--clr":"dtWzvY"},hidden:{display:"fcXWHl"},defaultVariant:{"--clr":"hneilo"},inverseVariant:{"--clr":"fVxgiL","--err":"dFKLrR"}},FormfieldDescription=react.forwardRef((function FormfieldDescription(_ref,ref){let{children,id,inlineStyle,isInvalid,styleExtend=[],variant="default"}=_ref,attrs=(0,objectWithoutProperties.Z)(_ref,_excluded);const variantClass=`${variant}Variant`;return __jsx("div",(0,esm_extends.Z)({ref,"aria-live":isInvalid?"assertive":"off",role:isInvalid?"alert":void 0},attrs,{id,className:(0,style9.Z)(c.base,c[variantClass],isInvalid&&c.isInvalid,...styleExtend),style:inlineStyle}),children)})),src_FormfieldDescription=FormfieldDescription;try{FormfieldDescription.displayName="FormfieldDescription",FormfieldDescription.__docgenInfo={description:"",displayName:"FormfieldDescription",props:{children:{defaultValue:null,description:"The description or error message to render",name:"children",required:!1,type:{name:"string | undefined"}},variant:{defaultValue:{value:"default"},description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},id:{defaultValue:null,description:"The ID attribute attached to the element",name:"id",required:!0,type:{name:"string"}},isInvalid:{defaultValue:null,description:"Indicate the description is an error message",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},inlineStyle:{defaultValue:null,description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyFormfieldDescription(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <FormfieldDescription\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<FormfieldDescription styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-formfield-description/src/FormfieldDescription.tsx#FormfieldDescription"]={docgenInfo:FormfieldDescription.__docgenInfo,name:"FormfieldDescription",path:"../../ds-atoms/s-formfield-description/src/FormfieldDescription.tsx#FormfieldDescription"})}catch(__react_docgen_typescript_loader_error){}},"../../ds-atoms/s-formfield-description/src/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("../../ds-atoms/s-formfield-description/src/FormfieldDescription.tsx").Z;try{src.displayName="src",src.__docgenInfo={description:"",displayName:"src",props:{children:{defaultValue:null,description:"The description or error message to render",name:"children",required:!1,type:{name:"string | undefined"}},variant:{defaultValue:{value:"default"},description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},id:{defaultValue:null,description:"The ID attribute attached to the element",name:"id",required:!0,type:{name:"string"}},isInvalid:{defaultValue:null,description:"Indicate the description is an error message",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},inlineStyle:{defaultValue:null,description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyFormfieldDescription(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <FormfieldDescription\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<FormfieldDescription styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-formfield-description/src/index.tsx#src"]={docgenInfo:src.__docgenInfo,name:"src",path:"../../ds-atoms/s-formfield-description/src/index.tsx#src"})}catch(__react_docgen_typescript_loader_error){}},"../../ds-atoms/s-text-field/src/TextField.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nl:()=>TextFieldInput,DO:()=>TextFieldWrapper,ZP:()=>src_TextField});var esm_extends=__webpack_require__("../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/extends.js"),objectWithoutProperties=__webpack_require__("../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("../../../node_modules/.pnpm/react@18.0.0-rc.3-next-e7d0053e6-20220325/node_modules/react/index.js"),style9=__webpack_require__("../../../node_modules/.pnpm/style9@0.14.0_rollup@2.79.1/node_modules/style9/index.mjs"),src=__webpack_require__("../../ds-atoms/s-formfield-description/src/index.tsx"),s_icon_src=__webpack_require__("../../ds-atoms/s-icon/src/index.tsx");const _excluded=["as","children","inlineStyle","styleExtend","state","isInvalid","variant","opaque"],_excluded2=["describedBy","hideBorder","endIcon","inlineStyle","label","required","sharp","startIcon","state","isInvalid","styleExtend"],_excluded3=["description","inlineStyle","styleExtend","state","isInvalid","variant","opaque"];var __jsx=react.createElement;const c={base:{"--show-bg":"iEDzBg","--inp-bgc-fallback":"hXIXxv","--dflt-inp-bgc":"bOzouQ","--dflt-lbl-bgc":"fLQgnW","--_inp-bgc":"cEqLBq","--_lbl-bgc":"fpfvBd",display:"jhKQav",flexWrap:"kiDYix",":hover":{"--inp-brdr-c":"jCIVeq"},":focus-within":{"--inp-brdr-c":"fCzHaA"}},opaque:{"--show-bg":"hOdlBv"},borderTransition:{transitionProperty:"fXEOVo",transitionDuration:"gAhwfJ",transitionTimingFunction:"iaemGh"},disabled:{cursor:"kFEjTq"},input:{backgroundColor:"cYfanZ",color:"hugODO",height:"gdPTUr",paddingBottom:"dRUifP",paddingTop:"daWMfK",paddingInlineStart:"ddynka",paddingInlineEnd:"bWNKbL",width:"cRUUAa",fontSize:"iKjpVA",lineHeight:"cVaJzg","@media all and (min-width:102em)":{fontSize:"iswsIN",lineHeight:"lbqvfo"},"::placeholder":{transitionProperty:"ekwGOM",transitionDuration:"bjgoBS",color:"dTBCNQ"},":focus":{outlineStyle:"larHMv"}},inputWithRaisedLabel:{"::placeholder":{transitionDelay:"wDoMa",color:"bLkLaC"}},inputEmail:{textAlign:"klEWBS"},inputWrapper:{position:"bEvNbr",height:"gdPTUr",width:"cRUUAa",display:"gSBWlu",left:"bOjOhu",right:"kLKrsq",pointerEvents:"eDssNQ",maxWidth:"fwqTyU"},inputWithStartIcon:{paddingRight:"bMSzLf","@media all and (min-width:102em)":{paddingRight:"gtrHhE"}},inputWithEndIcon:{paddingLeft:"iigETV","@media all and (min-width:102em)":{paddingLeft:"hCzYmC"}},wrapper:{display:"gSBWlu",width:"cRUUAa",position:"cjScYX"},icon:{fontSize:"jrcYoY",lineHeight:"oZPxp"},endIcon:{color:"iFtZBt",alignItems:"foGVKH",display:"gSBWlu",position:"bEvNbr",top:"gWNFme",transform:"bIXblk",insetInlineEnd:"kUYKuW"},endPart:{flexGrow:"iGDTOy",borderStartEndRadius:"cRDWRt",borderEndEndRadius:"bGojQK",borderTopColor:"bIAnar",borderTopStyle:"FwRrA",borderTopWidth:"izykGz",paddingTop:"bdXHYu",borderBottomColor:"fLMmlN",borderBottomStyle:"hpBjJb",borderBottomWidth:"ctibpX",paddingBottom:"eejUxl",borderInlineEndColor:"hGXSyb",borderInlineEndStyle:"hszzXi",borderInlineEndWidth:"bTnXNj",paddingInlineEnd:"cfEHVR"},label:{backgroundColor:"lgybsK",color:"lleaHT",display:"cpOcAb",paddingTop:"bBWxza",paddingRight:"jfgdf",paddingBottom:"iCWAjF",paddingLeft:"eoipNy",position:"cjScYX",top:"WhAZY",transitionProperty:"iRietU",transitionDuration:"gAhwfJ",transitionTimingFunction:"iaemGh",fontSize:"iKjpVA",lineHeight:"cVaJzg"},labelWithStartIcon:{insetInlineStart:"ihgzHw","@media all and (min-width:102em)":{insetInlineStart:"giRxjY"}},labelRaised:{color:"bgkfaA",fontWeight:"iLdtFu",paddingTop:"kVZHcH",paddingRight:"jWtTdy",paddingBottom:"iATxZH",paddingLeft:"iSNqlA",transform:"hLxPXo",top:"kNfNrW",insetInlineStart:"eAUDaE",fontSize:"gVscJz",lineHeight:"kvNqZl","@media all and (min-width:102em)":{fontSize:"hyhpVP",lineHeight:"kRmCJO"}},labelWrapper:{flexGrow:"dYbGIK",flexShrink:"bUPwGt",flexBasis:"iBlkxz",display:"gSBWlu",alignItems:"foGVKH",maxWidth:"hegOAG",width:"fEmNDH",borderBottomColor:"fLMmlN",borderBottomStyle:"hpBjJb",borderBottomWidth:"ctibpX",paddingBottom:"eejUxl",borderTopColor:"bIAnar",borderTopStyle:"FwRrA",borderTopWidth:"izykGz",paddingTop:"bdXHYu",transitionProperty:"iRietU",transitionDuration:"gAhwfJ",transitionTimingFunction:"iaemGh"},labelWrapperRaised:{borderTopColor:"bnHkVP"},required:{color:"jqAPKC",marginInlineStart:"gceMZP",transitionProperty:"gMKDja",transitionDuration:"YqHpi",transitionTimingFunction:"iaemGh",fontSize:"iKjpVA",lineHeight:"cVaJzg","@media all and (min-width:80em)":{fontSize:"hauAvq",lineHeight:"fKdRdV"}},requiredRaised:{fontSize:"gVscJz",lineHeight:"kvNqZl","@media all and (min-width:80em)":{fontSize:"fbDSck",lineHeight:"cIlhEA"}},startIcon:{alignItems:"foGVKH",display:"gSBWlu",position:"bEvNbr",top:"gWNFme",transform:"bIXblk",insetInlineStart:"cuuCgJ"},startPart:{width:"bPiKds",height:"gdPTUr",borderStartStartRadius:"dzqoCh",borderEndStartRadius:"doYnwO",borderTopColor:"bIAnar",borderTopStyle:"FwRrA",borderTopWidth:"izykGz",paddingTop:"bdXHYu",borderBottomColor:"fLMmlN",borderBottomStyle:"hpBjJb",borderBottomWidth:"ctibpX",paddingBottom:"eejUxl",borderInlineStartColor:"dTtLmh",borderInlineStartStyle:"itlHSH",borderInlineStartWidth:"hXXzlB",paddingInlineStart:"kQDwxQ"},defaultState:{},disabledState:{opacity:"iItPPl","--inp-brdr-c":"hkhLnH"},isInvalid:{"--inp-brdr-c":"fiOnme","--inp-hvr-brdr-c":"hyEuIz","--lbl-rsd-c":"fSQpwN","--end-icn-c":"dFzPtY"},defaultVariant:{"--txt-c":"jtyxHP","--inp-brdr-c":"jeSXiv","--inp-hvr-brdr-c":"eijLoJ","--inp-rqrd-color":"kyfqLx","--plchldr-c":"hpypZP","--inp-bgc":"coRyxn","--lbl-c":"fXJDFv","--lbl-rsd-c":"fYpUZn"},inverseVariant:{"--txt-c":"klzHgR","--plchldr-c":"cizztM","--inp-brdr-c":"fVvAbJ","--inp-hvr-brdr-c":"cAETdP","--inp-rqrd-color":"hFryRZ","--inp-bgc":"kluTfy","--lbl-c":"eZRTBv","--lbl-rsd-c":"gSNdQF","--lbl-err-c":"cvbkGf","--inp-err-brdr-c":"dulJhj","--inp-err-hvr-brdr-c":"eDFsdl"},topSharp:{borderTopLeftRadius:"liNQyG",borderTopRightRadius:"ecAwHT"},bottomSharp:{borderBottomLeftRadius:"dIuexX",borderBottomRightRadius:"hPkSBF"},startSharp:{borderStartStartRadius:"crUSOB",borderEndStartRadius:"ignlgT",borderRightWidth:"jDtjPB"},endSharp:{borderStartEndRadius:"hFXfyo",borderEndEndRadius:"iIbjtj",borderLeftWidth:"fvtUgb"},allSharp:{borderStartStartRadius:"crUSOB",borderStartEndRadius:"hFXfyo",borderEndStartRadius:"ignlgT",borderEndEndRadius:"iIbjtj"},topHideBorder:{borderTopWidth:"iRcVuj"},bottomHideBorder:{borderBottomWidth:"cCftdL"},blockHideBorder:{borderBottomWidth:"cCftdL",borderTopWidth:"iRcVuj"},startHideBorder:{borderRightWidth:"kDakOe"},endHideBorder:{borderLeftWidth:"iXRCfs"},inlineHideBorder:{borderLeftWidth:"iXRCfs",borderRightWidth:"kDakOe"},allHideBorder:{borderTopWidth:"iRcVuj",borderLeftWidth:"iXRCfs",borderBottomWidth:"cCftdL",borderRightWidth:"kDakOe"}},inputTypes=["email","hidden","number","password","search","tel","text"];function TextFieldWrapper(_ref){let{as,children,inlineStyle,styleExtend=[],state="default",isInvalid,variant="default",opaque=!1}=_ref,attrs=(0,objectWithoutProperties.Z)(_ref,_excluded);const variantClass=`${variant}Variant`,stateClass=`${state}State`;return __jsx(as||"div",(0,esm_extends.Z)({className:(0,style9.Z)(c.base,c[variantClass],c[stateClass],isInvalid&&c.isInvalid,opaque&&c.opaque,...styleExtend),style:inlineStyle},attrs),children)}const TextFieldInput=react.forwardRef((function TextFieldinput(_ref2,ref){let{describedBy,hideBorder,endIcon,inlineStyle={},label,required=!1,sharp,startIcon,state="default",isInvalid,styleExtend=[]}=_ref2,attrs=(0,objectWithoutProperties.Z)(_ref2,_excluded2);const[isAutoFilled,setIsAutoFilled]=react.useState(!1),[isLabelRaised,setIsLabelRaised]=react.useState(!!attrs.value||!!attrs.defaultValue),inputId=(0,react.useId)(),inputRef=react.useRef(null),containerRef=react.useRef(null);(0,react.useImperativeHandle)(ref,(()=>inputRef.current));const attrsOverride={},didInitialLabelRaisedCheck=react.useRef(!1);didInitialLabelRaisedCheck.current||(didInitialLabelRaisedCheck.current=!0,checkIsLabelRaised()),(0,react.useEffect)((()=>{var _containerRef$current;const selectors=[`input[id='${inputId}']:-autofill`,`input[id='${inputId}']:-webkit-autofill`].join(","),autofilledElement=null===(_containerRef$current=containerRef.current)||void 0===_containerRef$current?void 0:_containerRef$current.querySelector(selectors);setIsAutoFilled(!!autofilledElement)}),[inputId]);const isDisabled="disabled"===state;null==attrs.value||attrs.onChange||attrs.readOnly||(attrsOverride.defaultValue=attrs.defaultValue||attrs.value,attrsOverride.value=void 0);const isEmail="email"===attrs.type,isHiddenType="hidden"===attrs.type,sharpClass=sharp?`${sharp}Sharp`:void 0,cancelBorderClass=hideBorder?`${hideBorder}HideBorder`:void 0;function checkIsLabelRaised(){const isFilled=null!=inputRef.current?!!inputRef.current.value:function hasValueInAttrs(){return!!(attrs.value||attrs.defaultValue||attrsOverride.value||attrsOverride.defaultValue)}();setIsLabelRaised(isFilled||isAutoFilled)}return attrs.type&&inputTypes.includes(attrs.type)?isEmail&&(attrsOverride.dir="ltr"):attrsOverride.type="text",describedBy&&(attrsOverride["aria-describedby"]=describedBy),__jsx("div",{className:(0,style9.Z)(c.wrapper,...styleExtend),style:inlineStyle,ref},__jsx("div",{className:(0,style9.Z)(c.startIcon,c.borderTransition)},startIcon),__jsx("div",{className:(0,style9.Z)(c.endIcon,c.borderTransition)},isInvalid?__jsx(s_icon_src.Z,{icon:"warn"}):endIcon),__jsx("input",(0,esm_extends.Z)({className:(0,style9.Z)(c.input,!!startIcon&&c.inputWithStartIcon,!!endIcon&&c.inputWithEndIcon,isEmail&&c.inputEmail,isLabelRaised&&c.inputWithRaisedLabel),id:inputId,ref:inputRef,required,onBlur:function onBlur(event){"function"==typeof attrs.onBlur&&attrs.onBlur(event),checkIsLabelRaised()},onFocus:function onFocus(event){"function"==typeof attrs.onFocus&&attrs.onFocus(event),setIsLabelRaised(!0)}},attrs,attrsOverride,{disabled:isDisabled})),isHiddenType?null:__jsx("div",{className:(0,style9.Z)(c.inputWrapper)},__jsx("div",{className:(0,style9.Z)(c.startPart,c.borderTransition,!!sharpClass&&c[sharpClass],!!cancelBorderClass&&c[cancelBorderClass])}),__jsx("div",{className:(0,style9.Z)(c.labelWrapper,isLabelRaised&&c.labelWrapperRaised,!!cancelBorderClass&&c[cancelBorderClass],c.borderTransition)},label?__jsx("label",{htmlFor:inputId,className:(0,style9.Z)(c.label,!!startIcon&&c.labelWithStartIcon,isLabelRaised&&c.labelRaised,isDisabled&&c.disabled)},label,required?__jsx("span",{className:(0,style9.Z)(c.required,isLabelRaised&&c.requiredRaised)},"*"):null):null),__jsx("div",{className:(0,style9.Z)(c.endPart,c.borderTransition,!!sharpClass&&c[sharpClass],!!cancelBorderClass&&c[cancelBorderClass])})))})),TextField=react.forwardRef((function TextField(_ref3,ref){let{description,inlineStyle,styleExtend=[],state="default",isInvalid=!1,variant="default",opaque=!1}=_ref3,attrs=(0,objectWithoutProperties.Z)(_ref3,_excluded3);const descriptionId=react.useId(),isHiddenType="hidden"===attrs.type;return __jsx(TextFieldWrapper,{styleExtend,inlineStyle,state,isInvalid,variant,opaque},__jsx(TextFieldInput,(0,esm_extends.Z)({},attrs,{describedBy:description&&descriptionId,state,isInvalid,ref})),description&&!isHiddenType?__jsx(src.Z,{variant,isInvalid,id:descriptionId},description):null)})),src_TextField=TextField;try{TextFieldWrapper.displayName="TextFieldWrapper",TextFieldWrapper.__docgenInfo={description:"",displayName:"TextFieldWrapper",props:{children:{defaultValue:null,description:"Elements to render inside the wrapper, e.g., an input, a label,\ndescription text",name:"children",required:!0,type:{name:"ReactNode"}},variant:{defaultValue:{value:"default"},description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},opaque:{defaultValue:{value:"false"},description:"Give input a solid opaque background\n@defaultValue false",name:"opaque",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:{value:"default"},description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:{value:"false"},description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},inlineStyle:{defaultValue:{value:"{}"},description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-text-field/src/TextField.tsx#TextFieldWrapper"]={docgenInfo:TextFieldWrapper.__docgenInfo,name:"TextFieldWrapper",path:"../../ds-atoms/s-text-field/src/TextField.tsx#TextFieldWrapper"})}catch(__react_docgen_typescript_loader_error){}try{TextFieldInput.displayName="TextFieldInput",TextFieldInput.__docgenInfo={description:"",displayName:"TextFieldInput",props:{describedBy:{defaultValue:null,description:"The `id` of the element describing the input",name:"describedBy",required:!1,type:{name:"string | undefined"}},startIcon:{defaultValue:null,description:"An icon component to place at the beginning of the input.",name:"startIcon",required:!1,type:{name:"ReactNode"}},endIcon:{defaultValue:null,description:"An icon component to place at the end of the input.",name:"endIcon",required:!1,type:{name:"ReactNode"}},sharp:{defaultValue:null,description:"Sets sharp corners (without border-radius) on two or more corners",name:"sharp",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"end"'}]}},type:{defaultValue:null,description:"The input's type attribue\n@defaultValue 'text'",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"hidden"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"email"'},{value:'"password"'}]}},hideBorder:{defaultValue:null,description:"An input edge (or edges) on which the border is invisible\n(e.g. for grouping with a button)",name:"hideBorder",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"inline"'},{value:'"end"'},{value:'"block"'}]}},label:{defaultValue:null,description:"The input's label",name:"label",required:!1,type:{name:"string | undefined"}},required:{defaultValue:{value:"false"},description:"Indicates if the input is required\n@defaultValue false",name:"required",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:{value:"default"},description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:{value:"false"},description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},inlineStyle:{defaultValue:{value:"{}"},description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-text-field/src/TextField.tsx#TextFieldInput"]={docgenInfo:TextFieldInput.__docgenInfo,name:"TextFieldInput",path:"../../ds-atoms/s-text-field/src/TextField.tsx#TextFieldInput"})}catch(__react_docgen_typescript_loader_error){}try{TextField.displayName="TextField",TextField.__docgenInfo={description:"",displayName:"TextField",props:{description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string | undefined"}},inlineStyle:{defaultValue:{value:"{}"},description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}},variant:{defaultValue:{value:"default"},description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},opaque:{defaultValue:{value:"false"},description:"Give input a solid opaque background\n@defaultValue false",name:"opaque",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:{value:"default"},description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:{value:"false"},description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"The input's type attribue\n@defaultValue 'text'",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"hidden"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"email"'},{value:'"password"'}]}},required:{defaultValue:{value:"false"},description:"Indicates if the input is required\n@defaultValue false",name:"required",required:!1,type:{name:"boolean | undefined"}},startIcon:{defaultValue:null,description:"An icon component to place at the beginning of the input.",name:"startIcon",required:!1,type:{name:"ReactNode"}},endIcon:{defaultValue:null,description:"An icon component to place at the end of the input.",name:"endIcon",required:!1,type:{name:"ReactNode"}},sharp:{defaultValue:null,description:"Sets sharp corners (without border-radius) on two or more corners",name:"sharp",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"end"'}]}},hideBorder:{defaultValue:null,description:"An input edge (or edges) on which the border is invisible\n(e.g. for grouping with a button)",name:"hideBorder",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"inline"'},{value:'"end"'},{value:'"block"'}]}},label:{defaultValue:null,description:"The input's label",name:"label",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-text-field/src/TextField.tsx#TextField"]={docgenInfo:TextField.__docgenInfo,name:"TextField",path:"../../ds-atoms/s-text-field/src/TextField.tsx#TextField"})}catch(__react_docgen_typescript_loader_error){}},"../../ds-molecules/s-text-field-with-button/src/TextFieldwithButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>_TextFieldWithButton,Z:()=>src_TextFieldwithButton});var esm_extends=__webpack_require__("../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/extends.js"),objectWithoutProperties=__webpack_require__("../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("../../../node_modules/.pnpm/react@18.0.0-rc.3-next-e7d0053e6-20220325/node_modules/react/index.js"),style9=__webpack_require__("../../../node_modules/.pnpm/style9@0.14.0_rollup@2.79.1/node_modules/style9/index.mjs"),s_button_src=__webpack_require__("../../ds-atoms/s-button/src/index.tsx"),src_TextField=__webpack_require__("../../ds-atoms/s-text-field/src/TextField.tsx");try{src.displayName="src",src.__docgenInfo={description:"",displayName:"src",props:{description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string | undefined"}},inlineStyle:{defaultValue:{value:"{}"},description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}},variant:{defaultValue:{value:"default"},description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},opaque:{defaultValue:{value:"false"},description:"Give input a solid opaque background\n@defaultValue false",name:"opaque",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:{value:"default"},description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:{value:"false"},description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"The input's type attribue\n@defaultValue 'text'",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"hidden"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"email"'},{value:'"password"'}]}},required:{defaultValue:{value:"false"},description:"Indicates if the input is required\n@defaultValue false",name:"required",required:!1,type:{name:"boolean | undefined"}},startIcon:{defaultValue:null,description:"An icon component to place at the beginning of the input.",name:"startIcon",required:!1,type:{name:"ReactNode"}},endIcon:{defaultValue:null,description:"An icon component to place at the end of the input.",name:"endIcon",required:!1,type:{name:"ReactNode"}},sharp:{defaultValue:null,description:"Sets sharp corners (without border-radius) on two or more corners",name:"sharp",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"end"'}]}},hideBorder:{defaultValue:null,description:"An input edge (or edges) on which the border is invisible\n(e.g. for grouping with a button)",name:"hideBorder",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"inline"'},{value:'"end"'},{value:'"block"'}]}},label:{defaultValue:null,description:"The input's label",name:"label",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-text-field/src/index.tsx#src"]={docgenInfo:src.__docgenInfo,name:"src",path:"../../ds-atoms/s-text-field/src/index.tsx#src"})}catch(__react_docgen_typescript_loader_error){}try{TextFieldWrapper.displayName="TextFieldWrapper",TextFieldWrapper.__docgenInfo={description:"",displayName:"TextFieldWrapper",props:{children:{defaultValue:null,description:"Elements to render inside the wrapper, e.g., an input, a label,\ndescription text",name:"children",required:!0,type:{name:"ReactNode"}},variant:{defaultValue:{value:"default"},description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},opaque:{defaultValue:{value:"false"},description:"Give input a solid opaque background\n@defaultValue false",name:"opaque",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:{value:"default"},description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:{value:"false"},description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},inlineStyle:{defaultValue:{value:"{}"},description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-text-field/src/index.tsx#TextFieldWrapper"]={docgenInfo:TextFieldWrapper.__docgenInfo,name:"TextFieldWrapper",path:"../../ds-atoms/s-text-field/src/index.tsx#TextFieldWrapper"})}catch(__react_docgen_typescript_loader_error){}try{TextFieldInput.displayName="TextFieldInput",TextFieldInput.__docgenInfo={description:"",displayName:"TextFieldInput",props:{describedBy:{defaultValue:null,description:"The `id` of the element describing the input",name:"describedBy",required:!1,type:{name:"string | undefined"}},startIcon:{defaultValue:null,description:"An icon component to place at the beginning of the input.",name:"startIcon",required:!1,type:{name:"ReactNode"}},endIcon:{defaultValue:null,description:"An icon component to place at the end of the input.",name:"endIcon",required:!1,type:{name:"ReactNode"}},sharp:{defaultValue:null,description:"Sets sharp corners (without border-radius) on two or more corners",name:"sharp",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"end"'}]}},type:{defaultValue:null,description:"The input's type attribue\n@defaultValue 'text'",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"hidden"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"email"'},{value:'"password"'}]}},hideBorder:{defaultValue:null,description:"An input edge (or edges) on which the border is invisible\n(e.g. for grouping with a button)",name:"hideBorder",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bottom"'},{value:'"top"'},{value:'"all"'},{value:'"start"'},{value:'"inline"'},{value:'"end"'},{value:'"block"'}]}},label:{defaultValue:null,description:"The input's label",name:"label",required:!1,type:{name:"string | undefined"}},required:{defaultValue:{value:"false"},description:"Indicates if the input is required\n@defaultValue false",name:"required",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:{value:"default"},description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:{value:"false"},description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},inlineStyle:{defaultValue:{value:"{}"},description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:{value:"[]"},description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-atoms/s-text-field/src/index.tsx#TextFieldInput"]={docgenInfo:TextFieldInput.__docgenInfo,name:"TextFieldInput",path:"../../ds-atoms/s-text-field/src/index.tsx#TextFieldInput"})}catch(__react_docgen_typescript_loader_error){}var s_formfield_description_src=__webpack_require__("../../ds-atoms/s-formfield-description/src/index.tsx");const _excluded=["onClick","state","busyNotice","variant","styleExtend"],_excluded2=["inlineStyle","isInvalid","opaque","styleExtend","state","variant","required","description","btnContent","btnProps","btnRef"];var __jsx=react.createElement;const c={base:{display:"gSBWlu",flexDirection:"iMkoWi"},button:{flexGrow:"bcjLCN",transitionTimingFunction:"iaemGh",":active":{transformOrigin:"eFxeLn"}},inputWithButton:{display:"gSBWlu"},input:{flexGrow:"iGDTOy",width:"fEmNDH"},disabledState:{opacity:"gOeSjL"}},src_TextFieldwithButton=react.forwardRef((function TextFieldWithButton(_ref,ref){let{inlineStyle,isInvalid,opaque,styleExtend=[],state,variant,required:requiredProp,description,btnContent,btnProps:{onClick:btnOnClick,state:btnState,busyNotice,variant:btnVariant,styleExtend:btnStyleExtend=[]}={},btnRef}=_ref,btnProps=(0,objectWithoutProperties.Z)(_ref.btnProps,_excluded),textFieldProps=(0,objectWithoutProperties.Z)(_ref,_excluded2);const inputRef=react.useRef(null),[required,setRequired]=react.useState(!1);react.useImperativeHandle(ref,(()=>inputRef.current));const descriptionId=react.useId(),buttonState=isInvalid||"disabled"===state?"disabled":btnState,btnStateObjOverride="busy"===buttonState?{state:"busy",busyNotice}:{state:buttonState},buttonVariant=isInvalid?"danger":btnVariant,onButtonClick=react.useCallback((evt=>{if(inputRef.current&&!inputRef.current.value)return evt.preventDefault(),void(requiredProp||setRequired(!0));btnOnClick&&btnOnClick(evt)}),[btnOnClick,requiredProp]);return __jsx(src_TextField.DO,{inlineStyle,isInvalid,opaque,styleExtend:[c.base,...styleExtend],state,variant},__jsx("div",{className:(0,style9.Z)(c.inputWithButton)},__jsx(src_TextField.Nl,(0,esm_extends.Z)({},textFieldProps,{describedBy:description&&descriptionId,hideBorder:"end",ref:inputRef,required:requiredProp||required,sharp:"end",state,styleExtend:[c.input]})),__jsx(s_button_src.ZP,(0,esm_extends.Z)({},btnProps,btnStateObjOverride,{onClick:onButtonClick,ref:btnRef,sharp:"start",variant:buttonVariant,styleExtend:[c.button,"disabled"===state&&c.disabledState,...btnStyleExtend]}),btnContent)),description?__jsx(s_formfield_description_src.Z,{id:descriptionId,isInvalid,variant},description):null)}));function _TextFieldWithButton(_props){return null}try{_TextFieldWithButton.displayName="_TextFieldWithButton",_TextFieldWithButton.__docgenInfo={description:"",displayName:"_TextFieldWithButton",props:{btnContent:{defaultValue:null,description:"The text of the button",name:"btnContent",required:!0,type:{name:"ReactNode"}},btnProps:{defaultValue:null,description:"A subset of the `ButtonProps` type from `@haaretz/s-button`\n(sans the ones irrelevant to this component).\nSee [the Button component](/?path=%2Fdocs%2Fatoms-button--overview) for more details.",name:"btnProps",required:!1,type:{name:"ButtonProps | undefined"}},btnRef:{defaultValue:null,description:"A reference to the button element",name:"btnRef",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined"}},inlineStyle:{defaultValue:null,description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:null,description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string | undefined"}},variant:{defaultValue:null,description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},opaque:{defaultValue:null,description:"Give input a solid opaque background\n@defaultValue false",name:"opaque",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:null,description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:null,description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},required:{defaultValue:null,description:"Indicates if the input is required\n@defaultValue false",name:"required",required:!1,type:{name:"boolean | undefined"}},startIcon:{defaultValue:null,description:"An icon component to place at the beginning of the input.",name:"startIcon",required:!1,type:{name:"ReactNode"}},endIcon:{defaultValue:null,description:"An icon component to place at the end of the input.",name:"endIcon",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"The input's label",name:"label",required:!1,type:{name:"string | undefined"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"email"'},{value:'"password"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-molecules/s-text-field-with-button/src/TextFieldwithButton.tsx#_TextFieldWithButton"]={docgenInfo:_TextFieldWithButton.__docgenInfo,name:"_TextFieldWithButton",path:"../../ds-molecules/s-text-field-with-button/src/TextFieldwithButton.tsx#_TextFieldWithButton"})}catch(__react_docgen_typescript_loader_error){}try{TextFieldwithButton.displayName="TextFieldwithButton",TextFieldwithButton.__docgenInfo={description:"",displayName:"TextFieldwithButton",props:{btnContent:{defaultValue:null,description:"The text of the button",name:"btnContent",required:!0,type:{name:"ReactNode"}},btnProps:{defaultValue:null,description:"A subset of the `ButtonProps` type from `@haaretz/s-button`\n(sans the ones irrelevant to this component).\nSee [the Button component](/?path=%2Fdocs%2Fatoms-button--overview) for more details.",name:"btnProps",required:!1,type:{name:"ButtonProps | undefined"}},btnRef:{defaultValue:null,description:"A reference to the button element",name:"btnRef",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined"}},inlineStyle:{defaultValue:null,description:"CSS declarations to be set as inline `style` on the\nhtml element.\n\nBy setting values of CSS Custom Properties based on\nprops or state in the consuming component (where\nthe value of `inlineStyle` is passed), `inlineStyle`\ncan be used as an API contract for setting dynamic\nvalues to styles created with `style9.create()`:\n@example ```ts\nimport s9 from 'style9';\n\nconst { styleExtend, } = s9.create({\n  styleExtend: {\n    color: 'var(--color-based-on-prop)',\n  },\n});\n\nfunction MyTextField(props) {\n  const inlineStyle = {\n    '--color-based-on-prop': props.color,\n  },\n\n  return (\n   <TextField\n     styleExtend={[ styleExtend, ]}\n     inlineStyle={inlineStyle}\n   />\n  );\n}\n```",name:"inlineStyle",required:!1,type:{name:"InlineStyles | undefined"}},styleExtend:{defaultValue:null,description:"An array of `Style`s created by `style9.create()`.\nWARNING: **_do not_** pass simple CSS-in-JS object.\nThe items in the array must be created with Style9's\n`create` function.\nThe array can also hold falsy values to assist with\nconditional inclusion of `Style`s:\n@example ```ts\nconst { foo, bar, } = s9.create({ foo: { ... }, bar: { ... }, });\n<TextField styleExtend={[ someCondition && foo, bar, ]} />\n```",name:"styleExtend",required:!1,type:{name:"StyleExtend | undefined"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string | undefined"}},variant:{defaultValue:null,description:"Sets the basic visual appearance of the input.\n@defaultValue 'default'",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"inverse"'}]}},opaque:{defaultValue:null,description:"Give input a solid opaque background\n@defaultValue false",name:"opaque",required:!1,type:{name:"boolean | undefined"}},state:{defaultValue:null,description:"The input's functional state\n@defaultValue 'default'",name:"state",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"disabled"'},{value:'"default"'}]}},isInvalid:{defaultValue:null,description:"Indicate the input is in an invalid state",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},required:{defaultValue:null,description:"Indicates if the input is required\n@defaultValue false",name:"required",required:!1,type:{name:"boolean | undefined"}},startIcon:{defaultValue:null,description:"An icon component to place at the beginning of the input.",name:"startIcon",required:!1,type:{name:"ReactNode"}},endIcon:{defaultValue:null,description:"An icon component to place at the end of the input.",name:"endIcon",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"The input's label",name:"label",required:!1,type:{name:"string | undefined"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"email"'},{value:'"password"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../ds-molecules/s-text-field-with-button/src/TextFieldwithButton.tsx#TextFieldwithButton"]={docgenInfo:TextFieldwithButton.__docgenInfo,name:"TextFieldwithButton",path:"../../ds-molecules/s-text-field-with-button/src/TextFieldwithButton.tsx#TextFieldwithButton"})}catch(__react_docgen_typescript_loader_error){}},"../../../node_modules/.pnpm/react@18.0.0-rc.3-next-e7d0053e6-20220325/node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("../../../node_modules/.pnpm/react@18.0.0-rc.3-next-e7d0053e6-20220325/node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"../../../node_modules/.pnpm/react@18.0.0-rc.3-next-e7d0053e6-20220325/node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("../../../node_modules/.pnpm/react@18.0.0-rc.3-next-e7d0053e6-20220325/node_modules/react/cjs/react-jsx-runtime.production.min.js")},"../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/extends.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}__webpack_require__.d(__webpack_exports__,{Z:()=>_extends})},"../../../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}__webpack_require__.d(__webpack_exports__,{Z:()=>_objectWithoutProperties})}}]);