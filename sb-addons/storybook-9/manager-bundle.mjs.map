{
  "version": 3,
  "sources": ["global-externals:@storybook/addons", "../../../../../config/l-storybook-config/defaultManagerConfig.js", "global-externals:react", "global-externals:@storybook/manager-api", "global-externals:@storybook/components", "global-externals:@storybook/core-events", "../../../../../config/l-storybook-config/platformToolbar/PlatformToolbar.jsx", "../../../../../config/l-storybook-config/platformToolbar/index.js", "../../../../../config/l-storybook-config/manager.js", "../../../.storybook/manager.js"],
  "sourcesContent": ["export default __STORYBOOKADDONS__;\nconst { addons, types, mockChannel } = __STORYBOOKADDONS__;\nexport { addons, types, mockChannel };", "const defaultManagerConfig = {\n  toolbar: {\n    zoom: { hidden: true },\n  },\n};\n\nexport default defaultManagerConfig;\n", "export default __REACT__;\nconst { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version } = __REACT__;\nexport { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version };", "export default __STORYBOOKAPI__;\nconst { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__;\nexport { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState };", "export default __STORYBOOKCOMPONENTS__;\nconst { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset } = __STORYBOOKCOMPONENTS__;\nexport { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset };", "export default __STORYBOOKCOREEVENTS__;\nconst { CHANNEL_CREATED, CONFIG_ERROR, CURRENT_STORY_WAS_SET, DOCS_RENDERED, FORCE_REMOUNT, FORCE_RE_RENDER, GLOBALS_UPDATED, IGNORED_EXCEPTION, NAVIGATE_URL, PLAY_FUNCTION_THREW_EXCEPTION, PRELOAD_ENTRIES, PREVIEW_BUILDER_PROGRESS, PREVIEW_KEYDOWN, REGISTER_SUBSCRIPTION, RESET_STORY_ARGS, SELECT_STORY, SET_CONFIG, SET_CURRENT_STORY, SET_GLOBALS, SET_INDEX, SET_STORIES, SHARED_STATE_CHANGED, SHARED_STATE_SET, STORIES_COLLAPSE_ALL, STORIES_EXPAND_ALL, STORY_ARGS_UPDATED, STORY_CHANGED, STORY_ERRORED, STORY_INDEX_INVALIDATED, STORY_MISSING, STORY_PREPARED, STORY_RENDERED, STORY_RENDER_PHASE_CHANGED, STORY_SPECIFIED, STORY_THREW_EXCEPTION, STORY_UNCHANGED, UPDATE_GLOBALS, UPDATE_QUERY_PARAMS, UPDATE_STORY_ARGS } = __STORYBOOKCOREEVENTS__;\nexport { CHANNEL_CREATED, CONFIG_ERROR, CURRENT_STORY_WAS_SET, DOCS_RENDERED, FORCE_REMOUNT, FORCE_RE_RENDER, GLOBALS_UPDATED, IGNORED_EXCEPTION, NAVIGATE_URL, PLAY_FUNCTION_THREW_EXCEPTION, PRELOAD_ENTRIES, PREVIEW_BUILDER_PROGRESS, PREVIEW_KEYDOWN, REGISTER_SUBSCRIPTION, RESET_STORY_ARGS, SELECT_STORY, SET_CONFIG, SET_CURRENT_STORY, SET_GLOBALS, SET_INDEX, SET_STORIES, SHARED_STATE_CHANGED, SHARED_STATE_SET, STORIES_COLLAPSE_ALL, STORIES_EXPAND_ALL, STORY_ARGS_UPDATED, STORY_CHANGED, STORY_ERRORED, STORY_INDEX_INVALIDATED, STORY_MISSING, STORY_PREPARED, STORY_RENDERED, STORY_RENDER_PHASE_CHANGED, STORY_SPECIFIED, STORY_THREW_EXCEPTION, STORY_UNCHANGED, UPDATE_GLOBALS, UPDATE_QUERY_PARAMS, UPDATE_STORY_ARGS };", "import React, { useCallback } from 'react';\nimport { FORCE_RE_RENDER } from '@storybook/core-events';\nimport { addons, useGlobals } from '@storybook/manager-api';\nimport { IconButton, Icons, WithTooltip, TooltipLinkList } from '@storybook/components';\n\nconst toLinks = (list, setPlatform, close) => {\n  return list.map(platformItem => {\n    return {\n      ...platformItem,\n      onClick: () => {\n        setPlatform(platformItem.id);\n        close();\n      },\n    };\n  });\n};\n\nfunction getIcon(platform) {\n  return platform === 'mobile' ? 'mobile' : platform === 'app' ? 'apple' : 'browser';\n}\n\nconst PlatformToolbar = () => {\n  const [globals, updateGlobals] = useGlobals();\n  const platform = globals.platform;\n\n  const [icon, setIcon] = React.useState(getIcon(platform));\n  // Function that will update the global value and trigger a UI refresh.\n  const refreshAndUpdateGlobal = newPlatform => {\n    // Updates Storybook global value\n    // eslint-disable-next-line no-unused-expressions, no-restricted-syntax\n    updateGlobals({ platform: newPlatform }),\n      // Invokes Storybook's addon API method (with the FORCE_RE_RENDER) event to trigger a UI refresh\n      addons.getChannel().emit(FORCE_RE_RENDER);\n\n    setIcon(getIcon(newPlatform));\n  };\n\n  const links = [\n    { id: 'desktop', title: 'Desktop', type: 'desktop', default: true, icon: 'browser' },\n    { id: 'mobile', title: 'Mobile', type: 'mobile', default: false, icon: 'mobile' },\n    { id: 'app', title: 'Application', type: 'app', default: false, icon: 'apple' },\n  ];\n\n  const setPlatform = useCallback(refreshAndUpdateGlobal, [updateGlobals]);\n\n  return (\n    <WithTooltip\n      placement=\"auto\"\n      tooltip={({ onHide }) => <TooltipLinkList links={toLinks(links, setPlatform, onHide)} />}\n      closeOnOutsideClick\n    >\n      <IconButton title=\"change platform\">\n        <Icons icon={icon} />\n      </IconButton>\n    </WithTooltip>\n  );\n};\nexport default PlatformToolbar;\n", "// eslint-disable-next-line import/no-unresolved\nimport PlatformToolbar from './PlatformToolbar';\n\nexport default PlatformToolbar;\n", "import React from 'react';\nimport { addons, types } from '@storybook/manager-api';\nimport { AddonPanel } from '@storybook/components';\n\nimport PlatformToolbar from './platformToolbar';\n\nconst ADDON_ID = 'platformAddon';\nconst TOOLBAR_ID = `${ADDON_ID}/toolbar`;\n\naddons.register(ADDON_ID, () => {\n  addons.add(TOOLBAR_ID, {\n    type: types.TOOL,\n    id: 'platform',\n    title: 'Platform',\n    match: ({ viewMode }) => viewMode === 'story',\n    render: ({ key }) => {\n      return (\n        <AddonPanel active={true} key={key || 'platform-toolbar'}>\n          <PlatformToolbar />\n        </AddonPanel>\n      );\n    },\n  });\n});\n", "/* eslint-disable import/no-extraneous-dependencies */\nimport { addons } from '@storybook/addons';\nimport defaultManagerConfig from '@haaretz/l-storybook-config/defaultManagerConfig';\nimport '@haaretz/l-storybook-config/manager';\n/* eslint-enable import/no-extraneous-dependencies */\n\naddons.setConfig({\n  ...defaultManagerConfig,\n});\n"],
  "mappings": "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",
  "names": ["addons_default", "addons", "types", "mockChannel", "defaultManagerConfig", "defaultManagerConfig_default", "react_default", "Children", "Component", "Fragment", "Profiler", "PureComponent", "StrictMode", "Suspense", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "lazy", "memo", "useCallback", "useContext", "useDebugValue", "useEffect", "useImperativeHandle", "useLayoutEffect", "useMemo", "useReducer", "useRef", "useState", "version", "manager_api_default", "ActiveTabs", "Consumer", "ManagerContext", "Provider", "addons", "combineParameters", "controlOrMetaKey", "controlOrMetaSymbol", "eventMatchesShortcut", "eventToShortcut", "isMacLike", "isShortcutTaken", "keyToSymbol", "merge", "mockChannel", "optionOrAltSymbol", "shortcutMatchesShortcut", "shortcutToHumanString", "types", "useAddonState", "useArgTypes", "useArgs", "useChannel", "useGlobalTypes", "useGlobals", "useParameter", "useSharedState", "useStoryPrepared", "useStorybookApi", "useStorybookState", "components_default", "A", "ActionBar", "AddonPanel", "Badge", "Bar", "Blockquote", "Button", "Code", "DL", "Div", "DocumentWrapper", "ErrorFormatter", "FlexBar", "Form", "H1", "H2", "H3", "H4", "H5", "H6", "HR", "IconButton", "IconButtonSkeleton", "Icons", "Img", "LI", "Link", "ListItem", "Loader", "OL", "P", "Placeholder", "Pre", "ResetWrapper", "ScrollArea", "Separator", "Spaced", "Span", "StorybookIcon", "StorybookLogo", "Symbols", "SyntaxHighlighter", "TT", "TabBar", "TabButton", "TabWrapper", "Table", "Tabs", "TabsState", "TooltipLinkList", "TooltipMessage", "TooltipNote", "UL", "WithTooltip", "WithTooltipPure", "Zoom", "codeCommon", "components", "createCopyToClipboardFunction", "getStoryHref", "icons", "interleaveSeparators", "nameSpaceClassNames", "resetComponents", "withReset", "core_events_default", "CHANNEL_CREATED", "CONFIG_ERROR", "CURRENT_STORY_WAS_SET", "DOCS_RENDERED", "FORCE_REMOUNT", "FORCE_RE_RENDER", "GLOBALS_UPDATED", "IGNORED_EXCEPTION", "NAVIGATE_URL", "PLAY_FUNCTION_THREW_EXCEPTION", "PRELOAD_ENTRIES", "PREVIEW_BUILDER_PROGRESS", "PREVIEW_KEYDOWN", "REGISTER_SUBSCRIPTION", "RESET_STORY_ARGS", "SELECT_STORY", "SET_CONFIG", "SET_CURRENT_STORY", "SET_GLOBALS", "SET_INDEX", "SET_STORIES", "SHARED_STATE_CHANGED", "SHARED_STATE_SET", "STORIES_COLLAPSE_ALL", "STORIES_EXPAND_ALL", "STORY_ARGS_UPDATED", "STORY_CHANGED", "STORY_ERRORED", "STORY_INDEX_INVALIDATED", "STORY_MISSING", "STORY_PREPARED", "STORY_RENDERED", "STORY_RENDER_PHASE_CHANGED", "STORY_SPECIFIED", "STORY_THREW_EXCEPTION", "STORY_UNCHANGED", "UPDATE_GLOBALS", "UPDATE_QUERY_PARAMS", "UPDATE_STORY_ARGS", "toLinks", "list", "setPlatform", "close", "platformItem", "getIcon", "platform", "PlatformToolbar", "globals", "updateGlobals", "useGlobals", "icon", "setIcon", "react_default", "refreshAndUpdateGlobal", "newPlatform", "addons", "FORCE_RE_RENDER", "links", "useCallback", "WithTooltip", "onHide", "TooltipLinkList", "IconButton", "Icons", "PlatformToolbar_default", "platformToolbar_default", "PlatformToolbar_default", "ADDON_ID", "TOOLBAR_ID", "addons", "types", "viewMode", "key", "react_default", "AddonPanel", "platformToolbar_default", "addons", "defaultManagerConfig_default"]
}
